name: CI

on:
  push:
    branches: [ main, master, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x64
            dotnet-version: '9.0.x'
          - os: windows-latest
            arch: x64
            dotnet-version: '9.0.x'
          - os: macos-14
            arch: arm64
            dotnet-version: '9.0.x'

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Test
      run: dotnet test src/ListMmfTests/ListMmfTests.csproj --configuration Release --logger "trx;LogFileName=test-results.trx"
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.arch }}
        path: '**/test-results.trx'


  package:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Compute package version from tag
      id: ver
      shell: bash
      run: |
        echo "GITHUB_REF_NAME=$GITHUB_REF_NAME"
        VERSION_NO_V="${GITHUB_REF_NAME#v}"
        echo "Resolved package version: $VERSION_NO_V"
        echo "version=$VERSION_NO_V" >> "$GITHUB_OUTPUT"
    
    - name: Pack
      run: |
        dotnet pack src/ListMmf/ListMmf.csproj \
          --configuration Release \
          -p:PackageVersion=${{ steps.ver.outputs.version }} \
          -p:Version=${{ steps.ver.outputs.version }} \
          --output ./artifacts
    
    - name: Publish to NuGet
      run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
    
    - name: Upload NuGet package
      uses: actions/upload-artifact@v4
      with:
          name: nuget-package
          path: ./artifacts/*.nupkg
